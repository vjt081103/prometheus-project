services:
  ubuntu:
    image: ubuntu
    volumes: 
      - ./test1:/app
      - ./datapro:/datapro
    entrypoint: ["bin/bash","-c","/app/entrypoint.sh"]
    networks:
      my_network:
        ipv4_address: 192.168.1.10


  prometheus:
    image: prom/prometheus
    volumes:
      - ./test1/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules.yml:/etc/prometheus/rules.yml
      - ./datapro/prometheus:/prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus","--web.console.libraries=/usr/share/prometheus/console_libraries","--web.console.templates=/usr/share/prometheus/consoles","--web.enable-lifecycle"]
    ports:
      - "9090:9090"
    #network_mode: "host"
    depends_on: 
      - ubuntu
    networks:
      my_network:
        ipv4_address: 192.168.1.2


  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./data:/var/lib/grafana
    ports:
      - "3000:3000"
    #network_mode: "host"
    networks:
      my_network:
        ipv4_address: 192.168.1.3


  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    #network_mode: "host"
    networks:
      my_network:
        ipv4_address: 192.168.1.4


  prometheus_backup:
    image: prom/prometheus
    ports: 
      - "55555:9090"
    volumes:
      - ./test1/prometheus_backup.yml:/etc/prometheus/prometheus.yml
      - ./rules.yml:/etc/prometheus/rules.yml
      - ./datapro/prometheus_backup:/prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus","--web.console.libraries=/usr/share/prometheus/console_libraries","--web.console.templates=/usr/share/prometheus/consoles","--web.enable-lifecycle"]
    depends_on: 
      - ubuntu
    networks:
      my_network:
        ipv4_address: 192.168.1.5



networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24 
